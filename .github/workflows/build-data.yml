name: Build data from Excel

on:
  push:
    branches:
      - main
    paths:
      - "Template_Proyectos_Dashboard.xlsx"
  workflow_dispatch: {}  # Permite ejecutarlo manualmente desde Actions

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verificar si existe Excel
        run: |
          if [ ! -f Template_Proyectos_Dashboard.xlsx ]; then
            echo "❌ No se encontró el archivo Excel en la raíz del repositorio"
            exit 1
          fi
          echo "✅ Excel encontrado correctamente."

      - name: Instalar Python y dependencias
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - run: |
          pip install --upgrade pip
          pip install pandas openpyxl

      - name: Convertir Excel a JSON
        run: |
          python scripts/convert_excel_to_json.py

      - name: Actualizar cache-bust.txt
        run: echo "$(date +'%Y-%m-%d_%H-%M-%S')" > cache-bust.txt

      - name: Commit y push forzado (siempre actualiza)
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          
          # Forzar inclusión de archivos ignorados
          git add -f data.json cache-bust.txt
          
          # Crear siempre un commit (aunque no haya cambios)
          git commit -m "auto: forzar actualización desde Excel [$(date +'%H:%M:%S')]" --allow-empty
          git push
